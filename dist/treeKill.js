"use strict";function killAll(e,r,c){var i={};try{Object.keys(e).forEach(function(c){e[c].forEach(function(e){i[e]||(killPid(e,r),i[e]=1)}),i[c]||(killPid(c,r),i[c]=1)})}catch(e){if(c)return c(e);throw e}if(c)return c()}function killPid(e,r){try{process.kill(parseInt(e,10),r)}catch(e){if("ESRCH"!==e.code)throw e}}function buildProcessTree(e,r,c,i,n){var s=i(e),t="";s.stdout.on("data",function(e){var e=e.toString("ascii");t+=e});var o=function(s){return delete c[e],0!=s?void(0==Object.keys(c).length&&n()):void t.match(/\d+/g).forEach(function(s){s=parseInt(s,10),r[e].push(s),r[s]=[],c[s]=1,buildProcessTree(s,r,c,i,n)})};s.on("close",o)}var childProcess=require("child_process"),whichSync=require("./whichSync"),spawn=childProcess.spawn,exec=childProcess.exec,isPgrep=!1;try{whichSync("pgrep"),isPgrep=!0}catch(e){}module.exports=function(e,r,c){var i={},n={};switch(i[e]=[],n[e]=1,process.platform){case"win32":exec("taskkill /pid "+e+" /T /F",c);break;case"darwin":buildProcessTree(e,i,n,function(e){return spawn("pgrep",["-P",e])},function(){killAll(i,r,c)});break;default:buildProcessTree(e,i,n,function(e){return isPgrep?spawn("pgrep",["-P",e]):spawn("ps",["-o","pid","--no-headers","--ppid",e])},function(){killAll(i,r,c)})}};